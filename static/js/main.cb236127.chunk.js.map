{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","hooks/totalCountAndPercentage.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css"],"names":["FeedbackOptions","options","leaveFeedback","map","option","className","style","Button","type","onClick","Statistic","item","text","Statistics","good","neutral","bad","total","positivePercentage","console","log","defaultProps","Container","children","Section","title","Notification","message","percentageCount","Math","round","App","openStatistic","useRef","useState","state","setState","current","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAIO,SAASA,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cACzC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,UAAWC,IAAMC,OAEjBC,KAAK,SACLC,QAAS,kBAAMP,EAAcE,IAJ/B,SAMGA,GAJIA,QCRV,SAASM,EAAT,GAAoC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAChC,OACE,6BACE,8BACGA,EADH,IACU,IACR,iCACGD,EACS,uBAATC,GAAiC,YCPrC,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAEtD,OADAC,QAAQC,IAAIN,EAAMC,EAASC,EAAKC,EAAOC,GAErC,+BACE,cAACR,EAAD,CAAsBE,KAAK,OAAOD,KAAMG,GAAzB,QACf,cAACJ,EAAD,CAAyBE,KAAK,UAAUD,KAAMI,GAA/B,WACf,cAACL,EAAD,CAAqBE,KAAK,MAAMD,KAAMK,GAAvB,OACf,cAACN,EAAD,CAAuBE,KAAK,QAAQD,KAAMM,GAA3B,SACf,cAACP,EAAD,CAEEE,KAAK,qBACLD,KAAMO,GAFF,yBDKZR,EAAUW,aAAe,CACvBV,KAAM,G,oBEPOW,EAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKlB,UAAWC,IAAK,UAArB,SAAqCiB,KCDhC,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SAC/B,OACE,kCACE,eAAC,EAAD,WACE,6BAAKE,IACJF,OCNF,IAAMG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KACjDD,EAAaL,aAAe,CAC1BM,QAAS,wBCLJ,IACMC,EAAkB,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OAC7Ba,KAAKC,MAAO,KAAOhB,EAAOC,EAAUC,GAAQF,ICQvC,SAASiB,IACd,IDXyB,ECWrBC,EAAgBC,kBAAO,GAC3B,EAA0BC,mBAAS,CACjCpB,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOmB,EAAP,KAAcC,EAAd,KAaA,OACE,qCACE,cAACZ,EAAD,CAASC,MAAM,wBAAf,SACE,cAACzB,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAZY,SAAAE,GAClB4B,EAAcK,SAAU,EACxBD,GAAS,SAAAE,GACP,OAAO,2BAAKA,GAAZ,kBAAwBlC,EAASkC,EAAUlC,GAAU,YAYrD,cAACoB,EAAD,CAASC,MAAM,aAAf,SACGO,EAAcK,QACb,cAACxB,EAAD,CACEC,KAAMqB,EAAMrB,KACZC,QAASoB,EAAMpB,QACfC,IAAKmB,EAAMnB,IACXC,ODvCe,ECuCGkB,EDvCJ,EAAGrB,KAAH,EAASC,QAAT,EAAkBC,KCwChCE,mBAAoBU,EAAgBO,KAGtC,cAAC,EAAD,CAAcR,QAAQ,2BCtChCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACV,EAAD,MAEFW,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.cb236127.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function FeedbackOptions({ options, leaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map(option => {\r\n        return (\r\n          <button\r\n            className={style.Button}\r\n            key={option}\r\n            type=\"button\"\r\n            onClick={() => leaveFeedback(option)}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Statistic({ item, text }) {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {text}:{' '}\r\n        <span>\r\n          {item}\r\n          {text === 'positivePercentage' && '%'}\r\n        </span>\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatistic.defaultProps = {\r\n  item: 0,\r\n};\r\nStatistic.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  item: PropTypes.number,\r\n};\r\n","import React from 'react';\nimport { Statistic } from '../Statistic/Statistic';\n\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  console.log(good, neutral, bad, total, positivePercentage);\n  return (\n    <ul>\n      <Statistic key=\"good\" text=\"good\" item={good} />\n      <Statistic key=\"neutral\" text=\"neutral\" item={neutral} />\n      <Statistic key=\"bad\" text=\"bad\" item={bad} />\n      <Statistic key=\"total\" text=\"total\" item={total} />\n      <Statistic\n        key=\"positivePercentage\"\n        text=\"positivePercentage\"\n        item={positivePercentage}\n      />\n    </ul>\n  );\n}\n\n//\n","import React from 'react';\nimport style from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={style['Container']}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import React from 'react';\nimport Container from '../Container';\nimport PropTypes from 'prop-types';\n\nexport function Section({ title, children }) {\n  return (\n    <section>\n      <Container>\n        <h2>{title}</h2>\n        {children}\n      </Container>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Notification = ({ message }) => <p>{message}</p>;\r\nNotification.defaultProps = {\r\n  message: 'have not any message',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","export const totalCount = ({ good, neutral, bad }) => good + neutral + bad;\nexport const percentageCount = ({ good, neutral, bad }) =>\n  Math.round((100 / (good + neutral + bad)) * good);\n\n// //  Math.round((good * 100 + neutral * 50 + bad * 0) / (good + neutral + bad));\n","import React, { useRef, useState } from 'react';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\nimport {\n  totalCount,\n  percentageCount,\n} from '../../hooks/totalCountAndPercentage';\n\nexport function App() {\n  let openStatistic = useRef(false);\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const changeState = option => {\n    openStatistic.current = true;\n    setState(prevState => {\n      return { ...prevState, [option]: prevState[option] + 1 };\n    });\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          leaveFeedback={changeState}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {openStatistic.current ? (\n          <Statistics\n            good={state.good}\n            neutral={state.neutral}\n            bad={state.bad}\n            total={totalCount(state)}\n            positivePercentage={percentageCount(state)}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"FeedbackOptions_Button__5eEyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__iF80E\"};"],"sourceRoot":""}